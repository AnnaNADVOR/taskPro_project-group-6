{"version":3,"file":"static/js/608.440ad12c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Board/AddBtnColumn/AddBtnColumn.module.css?57c6","webpack://react-homework-template/./src/components/Forms/BoardForms/AddColumnForm/AddColumnForm.module.css?8bcc","components/Forms/BoardForms/AddColumnForm/AddColumnForm.jsx","components/Board/AddBtnColumn/AddBtnColumn.jsx","webpack://react-homework-template/./src/components/Forms/BoardForms/CardForm/CardForm.module.css?1a90","webpack://react-homework-template/./src/components/PriorityOptions/PriorityOptions.module.css?75cd","components/PriorityOptions/PriorityOptions.jsx","webpack://react-homework-template/./src/components/Calendar/Calendar.module.css?a426","components/Calendar/Calendar.jsx","components/Forms/BoardForms/CardForm/CardForm.jsx","webpack://react-homework-template/./src/components/ColumnsList/ColumnsList.module.css?4558","redux/tasks/selectors.js","webpack://react-homework-template/./src/components/CardList/Card/Card.module.css?9f53","webpack://react-homework-template/./src/components/CardList/Progress/Progress.module.css?3286","components/CardList/Progress/Progress.jsx","components/CardList/Card/Card.jsx","components/CardList/CradList.jsx","components/ColumnsList/ColumnsList.jsx","webpack://react-homework-template/./src/components/ScreensPage/Screens.page.module.css?c90b","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Board/HeaderDashboard/HeaderDashboard.module.css?275b","components/Board/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/Screens.page.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnAddColumn\":\"AddBtnColumn_btnAddColumn__PKhFZ\",\"btnPlus\":\"AddBtnColumn_btnPlus__wZkNB\"};","// extracted by mini-css-extract-plugin\nexport default {\"addColumnModalTitle\":\"AddColumnForm_addColumnModalTitle__whRgL\",\"addColumnForm\":\"AddColumnForm_addColumnForm__PHu-J\",\"addColumnInput\":\"AddColumnForm_addColumnInput__6QVuw\"};","import { useState } from 'react';\nimport MainAddButton from 'components/Buttons/MainAddButton/MainAddButton';\nimport css from './AddColumnForm.module.css';\n\nconst AddColumnForm = () => {\n  const [title, setTitle] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setTitle(value);\n  };\n  return (\n    <div>\n      <h3 className={css.addColumnModalTitle}>Add column</h3>\n      <form className={css.addColumnForm}>\n        <input\n          className={css.addColumnInput}\n          name=\"title\"\n          value={title}\n          type=\"text\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          required\n        />\n        <MainAddButton text=\"Add\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddColumnForm;\n","import { useState } from 'react';\nimport sprite from 'assets/images/sprite.svg';\nimport css from './AddBtnColumn.module.css';\nimport Modal from 'components/Modal/Modal';\nimport AddColumnForm from '../../Forms/BoardForms/AddColumnForm/AddColumnForm';\n\nconst AddBtnColumn = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n      <button className={css.btnAddColumn} type=\"button\" onClick={toggleModal}>\n        <div className={css.btnPlus}>\n          <svg aria-label=\"plus\">\n            <use href={`${sprite}#plus-20`}></use>\n          </svg>\n        </div>\n        <p className={css.btnText}>Add another column</p>\n      </button>\n      {isOpen && (\n        <Modal closeModal={toggleModal}>\n          <AddColumnForm />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddBtnColumn;\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"CardForm_formTitle__UxmMR\",\"formText\":\"CardForm_formText__Lrywy\",\"inputForm\":\"CardForm_inputForm__Pjbp4\",\"errorField\":\"CardForm_errorField__u4Pnb\",\"label\":\"CardForm_label__yLVGx\",\"description\":\"CardForm_description__JlASz CardForm_inputForm__Pjbp4\",\"priorityWrapper\":\"CardForm_priorityWrapper__AUS8j\",\"deadlineWrapper\":\"CardForm_deadlineWrapper__9e5ip\"};","// extracted by mini-css-extract-plugin\nexport default {\"labelWrapper\":\"PriorityOptions_labelWrapper__Byxtu\",\"label\":\"PriorityOptions_label__MK2FN\"};","import { Field } from 'formik';\nimport css from \"./PriorityOptions.module.css\"\n    \nconst PriorityOptions = ({options, priority, active }) => {\n    return (\n        <ul className={css.labelWrapper}>                        \n            {options.map(({ value, color }) => (                          \n                <li key={value} >\n                    <Field\n                        as=\"input\"\n                        type=\"radio\"\n                        name=\"priority\"\n                        value={value}\n                        checked = {priority === value}\n                        className={css.label}\n                        style={{ backgroundColor: color }}\n                        onClick={active}\n                    />\n                </li>                 \n            ))}                   \n        </ul>            \n    )\n    \n}\nexport default PriorityOptions","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Calendar_button__9bAG0\"};","import DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport css from \"./Calendar.module.css\"\nimport { forwardRef } from \"react\";\nimport sprite from \"../../assets/images/sprite.svg\";\nimport en from \"date-fns/locale/en-GB\";\n\n\nconst Calendar = ({ date, changeDate }) => {\n    const getDateFormat = (date) => {\n    const today = new Date();\n    const tomorrow = new Date();\n    tomorrow.setDate(today.getDate() + 1);\n    if (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    ) {\n      return \"'Today', MMMM dd\";\n    } else if (\n      date.getDate() === tomorrow.getDate() &&\n      date.getMonth() === tomorrow.getMonth() &&\n      date.getFullYear() === tomorrow.getFullYear()\n    ) {\n      return \"'Tomorrow', MMMM dd\";\n    } else {\n      return \"EEEE, MMMM dd\";\n    }\n  };\n    \n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <button type=\"button\" className={css.button} onClick={onClick} ref={ref}>\n      {value}\n      <svg>\n        <use href={`${sprite}#select-menu-16`} />\n      </svg>\n    </button>\n  ));\n \n  return (\n    <DatePicker className={css.picker}\n      locale={en}                \n      selected={date}\n      onChange={changeDate}\n      minDate={new Date()}\n      dateFormat={getDateFormat(date)}\n      onFocus={(event) => event.target.blur()}\n      onKeyDown={(event) => event.preventDefault()}\n      customInput={<CustomInput />}       \n    />\n  )\n}\n\nexport default Calendar;","import { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport css from \"./CardForm.module.css\"; \nimport PriorityOptions from '../../../PriorityOptions/PriorityOptions';\nimport Calendar from '../../../Calendar/Calendar';\nimport MainAddButton from '../../../Buttons/MainAddButton/MainAddButton';\n\nimport { useDispatch } from \"react-redux\";\n// import { selectTasks } from '../../../../redux/tasks/selectors';\nimport { addTask } from '../../../../redux/tasks/operation';\n\nconst addCardSchema = Yup.object().shape({\n    title: Yup.string()\n        .required(\"Please enter the title\")\n        .max(25, \"Must be no more than 25 characters long\"),\n    description: Yup.string(),\n});\n\nconst initialValues = {\n    title: \"\",\n    description: \"\", \n}\n\nconst CardForm = ({title, action, taskTitle, taskDescription, taskPriority, taskDeadline, taskId, columnId}) => {\n    const [priority, setPriority] = useState('without');\n    const [deadline, setDeadline] = useState(new Date());\n\n    const priorityChange = (event) => {\n        setPriority(event.target.value);\n    }\n\n    const dispatch = useDispatch();\n    \n    const handleSubmit = (values, actions) => {\n        const newCard = {\n            column: columnId,\n            title: values.title,\n            description: values.description,\n            priority: values.priority,\n            deadline: deadline,\n        }\n        dispatch(addTask(newCard));\n        actions.resetForm()         \n    }\n\n    const priorityOptions = [\n        { value: 'low', color: `var(--priority-low-color)`},\n        { value: 'medium', color: `var(--priority-medium-color)`},\n        { value: 'high', color: `var(--priority-high-color)` },\n        { value: 'without', color: `var(--priority-color-without)`},\n    ];\n\n    return (\n        <Formik validationSchema={addCardSchema}\n            initialValues={initialValues}\n            onSubmit={handleSubmit}>\n            <Form autoComplete=\"off\">\n                <h4 className={css.formTitle}>{title}</h4>\n                <label className={css.label} htmlFor=\"title\">\n                    <Field className={css.inputForm}\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"Title\"\n                        required={true}\n                        autoFocus\n                        // value={title}\n                    />\n                    <span className={css.errorField}>\n                        <ErrorMessage name=\"title\" />\n                    </span>                    \n                </label>\n                <label htmlFor=\"description\">\n                    <Field className={css.description}\n                        as=\"textarea\"\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        required={true}\n                        // value={description}\n                    />\n                </label>           \n                <div className={css.priorityWrapper}>\n                    <p className={css.formText}>Label color</p>\n                    <PriorityOptions\n                        options={priorityOptions}\n                        priority={priority}\n                        active={priorityChange}\n                    />  \n                </div>\n                <div className={css.deadlineWrapper}>\n                    <p className={css.formText}>Deadline</p>\n                    <Calendar date={deadline} changeDate={setDeadline} />\n                </div>\n                <MainAddButton text={action}/>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default CardForm; ","// extracted by mini-css-extract-plugin\nexport default {\"columnsListContainer\":\"ColumnsList_columnsListContainer__y1n-3\",\"columnList\":\"ColumnsList_columnList__Oh-td\",\"columnItem\":\"ColumnsList_columnItem__fGEt7\",\"columnTitle\":\"ColumnsList_columnTitle__JgLbv\",\"btnIcon\":\"ColumnsList_btnIcon__dIt+m\",\"columnTitleIcon\":\"ColumnsList_columnTitleIcon__cKKEZ\"};","// import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectTasks = (state) => {\n    console.log(\"select\", state.tasks.tasksList)\n    return state.tasks.tasksList\n};\nexport const selectIsLoadingAdd = state => state.tasks.isLoadingAdd; \nexport const selectError = state => state.tasks.error; ","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9i1e0\",\"cardTitle\":\"Card_cardTitle__WOpNK\",\"cardDescription\":\"Card_cardDescription__asnRe\",\"cardOptions\":\"Card_cardOptions__Jpn8u\",\"optionsInfo\":\"Card_optionsInfo__Ur7lv\",\"optonWrapper\":\"Card_optonWrapper__paaQk\",\"optionTitle\":\"Card_optionTitle__Xwwk2\",\"priorityMark\":\"Card_priorityMark__P5D5u\",\"priorityLabel\":\"Card_priorityLabel__UV0uv\",\"optionsBtnList\":\"Card_optionsBtnList__MCRS8\",\"optionBtn\":\"Card_optionBtn__O+R+M\",\"deadlineNotify\":\"Card_deadlineNotify__l71UH\",\"btnItem\":\"Card_btnItem__tGlpJ\",\"optionBtnSvg\":\"Card_optionBtnSvg__gpnjf\",\"bell\":\"Card_bell__9Ck4Y\",\"progressContainer\":\"Card_progressContainer__MLD9P\"};","// extracted by mini-css-extract-plugin\nexport default {\"popupMenu\":\"Progress_popupMenu__BWCqT\",\"progressList\":\"Progress_progressList__kvm4P\",\"progressListBtn\":\"Progress_progressListBtn__Hv5GC\",\"progressBtnSvg\":\"Progress_progressBtnSvg__15GWP\"};","import React from 'react';\nimport css from './Progress.module.css';\nimport sprite from 'assets/images/sprite.svg';\n\nconst Progress = ({ showMenu, handleProgressChange, toggleMenu }) => {\n  return (\n    showMenu && (\n      <div className={css.popupMenu}>\n        <ul className={css.progressList}>\n          <li>\n            <button\n              className={css.progressListBtn}\n              onClick={() => handleProgressChange('inProgress')}\n            >\n              In Progress{' '}\n              <span>\n                <svg className={css.progressBtnSvg}>\n                  <use href={`${sprite}#remove-16`}></use>\n                </svg>\n              </span>\n            </button>\n          </li>\n          <li>\n            <button\n              className={css.progressListBtn}\n              onClick={() => handleProgressChange('done')}\n            >\n              Done\n              <span>\n                <svg className={css.progressBtnSvg}>\n                  <use href={`${sprite}#remove-16`}></use>\n                </svg>\n              </span>\n            </button>\n          </li>\n        </ul>\n      </div>\n    )\n  );\n};\n\nexport default Progress;\n","import css from './Card.module.css';\nimport sprite from '../../../assets/images/sprite.svg';\nimport { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from \"react-redux\";\nimport Modal from 'components/Modal/Modal';\nimport CardForm from 'components/Forms/BoardForms/CardForm/CardForm';\nimport Progress from '../Progress/Progress';\n// import { useDispatch } from \"react-redux\";\n\nconst Card = ({ newCard }) => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\nconsole.log(\"new\", newCard.newCard)\n  //date\n  const today = new Date();\n  function formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${day}/${month}/${year}`;\n  }\n  const formattedDate = formatDate(today);\n\n  //priorityOptions\n  const priority = newCard.priority;\n  let color;\n  switch (priority) {\n    case 'Low':\n      color = 'var(--priority-low-color)';\n      break;\n    case 'Medium':\n      color = '#E09CB5';\n      break;\n    case 'High':\n      color = '#BEDBB0';\n      break;\n    case \"Without\":\n      color = 'var(--priority-color-without)';\n      break;\n    default:\n      color = `var(--priority-color-without)`;\n  }\n\n  //progress popup\n  const [showMenu, setShowMenu] = useState(false);\n  const [setProgress] = useState('');\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      setShowMenu(false);\n    };\n\n    const handleKeyPress = event => {\n      if (event.key === 'Escape') {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleProgressChange = progress => {\n    setProgress(progress);\n    setShowMenu(false);\n  };\n\n  // const dispatch = useDispatch(); \n\n  return (\n    <>\n      <div className={css.card} style={{ borderLeft: `4px solid ${color}` }}>\n        <h4 className={css.cardTitle}>{newCard.title}</h4>\n        <p className={css.cardDescription}>{newCard.description}\n          {/* Create visually appealing and functional design prototypes based on\n          the approved concepts, ensuring seamless user experience and\n          incorporating feedback for iterative improvements. */}\n        </p>\n        <div className={css.cardOptions}>\n          <div className={css.optionsInfo}>\n            <div className={css.optionWrapper}>\n              <h5 className={css.optionTitle}>Priority</h5>\n              <div className={css.priorityLabel}>\n                <span\n                  className={css.priorityMark}\n                  style={{ backgroundColor: color }}\n                ></span>\n                <p>{newCard.priority}</p>\n              </div>\n            </div>\n            <div className={css.optionWrapper}>\n              <h5 className={css.optionTitle}>Deadline</h5>\n              <p>{formattedDate}</p>\n            </div>\n          </div>\n          <ul className={css.optionsBtnList}>\n            <li className={css.deadlineNotify}>\n              <button className={css.optionBtn} type=\"button\">\n                <svg className={css.bell}>\n                  <use href={`${sprite}#bell-16`}></use>\n                </svg>\n              </button>\n            </li>\n            <li>\n              <button\n                className={css.optionBtn}\n                type=\"button\"\n                onClick={toggleMenu}\n              >\n                <svg className={css.optionBtnSvg}>\n                  <use href={`${sprite}#remove-16`}></use>\n                </svg>\n              </button>\n              <div className={css.progressContainer}>\n                {showMenu && (\n                  <Progress\n                    showMenu={showMenu}\n                    handleProgressChange={handleProgressChange}\n                    toggleMenu={toggleMenu}\n                  />\n                )}\n              </div>\n            </li>\n            <li className={css.btnItem}>\n              <button\n                className={css.optionBtn}\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                <svg className={css.optionBtnSvg}>\n                  <use href={`${sprite}#pencil-16`}></use>\n                </svg>\n              </button>\n            </li>\n            <li>\n              <button className={css.optionBtn} type=\"button\">\n                <svg className={css.optionBtnSvg}>\n                  <use href={`${sprite}#trash-16`}></use>\n                </svg>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      {showModal && (\n        <Modal closeModal={toggleModal}>\n          <CardForm title=\"Edit card\" action=\"Edit\" />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import { useSelector } from \"react-redux\";\nimport { selectTasks } from \"../../redux/tasks/selectors\";\nimport Card from \"../CardList/Card/Card\";\n\nconst CardList = () => {\n    const cards = useSelector(selectTasks);\n    console.log(\"card\", cards)\n    return (\n        <ul>\n            {cards.map(card =>\n                <li key={card._id}>\n                    <Card newCard={card} />\n                </li>\n            )}\n        </ul>\n    \n    )\n}\n\nexport default CardList; ","import { useState } from 'react';\nimport MainAddButton from '../Buttons/MainAddButton/MainAddButton';\nimport Modal from '../Modal/Modal';\nimport CardForm from '../Forms/BoardForms/CardForm/CardForm';\nimport css from './ColumnsList.module.css';\nimport sprite from '../../assets/images/sprite.svg';\nimport CardList from 'components/CardList/CradList';\n\nconst ColumnsList = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n      <div className={css.columnsListContainer}>\n        <ul className={css.columnList}>\n          <li className={css.columnItem}>\n            <div>\n              <p className={css.columnTitle}>\n                To do\n                <button className={css.btnIcon}>\n                  <svg className={css.columnTitleIcon} width={16} height={16}>\n                    <use href={`${sprite}#pencil-16`}></use>\n                  </svg>\n                </button>\n                <button className={css.btnIcon}>\n                  <svg className={css.columnTitleIcon} width={16} height={16}>\n                    <use href={`${sprite}#trash-16`}></use>\n                  </svg>\n                </button>\n              </p>\n              <div>\n               <CardList/>\n              </div>\n              <MainAddButton text=\"Add another card\" click={toggleModal} />\n            </div>\n          </li>\n          <li className={css.columnItem}>\n            <div>\n              <p className={css.columnTitle}>\n                In progress\n                <button className={css.btnIcon}>\n                  <svg className={css.columnTitleIcon} width={16} height={16}>\n                    <use href={`${sprite}#pencil-16`}></use>\n                  </svg>\n                </button>\n                <button className={css.btnIcon}>\n                  <svg className={css.columnTitleIcon} width={16} height={16}>\n                    <use href={`${sprite}#trash-16`}></use>\n                  </svg>\n                </button>\n              </p>\n              <div>\n                {/* <Card /> */}\n              </div>\n              <MainAddButton text=\"Add another card\" click={toggleModal} />\n            </div>\n          </li>\n        </ul>\n      </div>\n      {isOpen && (\n        <Modal closeModal={toggleModal}>\n          <CardForm title=\"Add card\" action=\"Add\" columnId=\"gjfjfkfelkfelkfwekwfelk1\" />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ColumnsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Screens_page_container__51p2p\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterWrap\":\"Filter_filterWrap__xOHoa\",\"filterContainer\":\"Filter_filterContainer__8G57N\",\"textLeabel\":\"Filter_textLeabel__QUz2b\",\"buttonLeabel\":\"Filter_buttonLeabel__JxnC3\",\"leabelGroup\":\"Filter_leabelGroup__06GpO\",\"label\":\"Filter_label__vEd1E\",\"labeltext\":\"Filter_labeltext__wgxuo\"};","import { Formik, Form, Field } from 'formik';\nimport css from './Filter.module.css';\nimport { useState } from 'react';\nimport BoardBackgroundPicker from 'components/BoardBackgroundPicker/BoardBeckgroundPicker';\n\nconst Filter = () => {\n  const [priority, setPriority] = useState('without');\n  const [backgroundName, setBackgroundName] = useState('00');\n  const priorityOptions = [\n    {\n      value: 'without',\n      color: `var(--priority-color-without)`,\n      text: 'Without priority',\n    },\n    { value: 'low', color: `var(--priority-low-color)`, text: 'Low' },\n    { value: 'medium', color: `var(--priority-medium-color)`, text: 'Medium' },\n    { value: 'high', color: `var(--priority-high-color)`, text: 'High' },\n  ];\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n  const handleChange = event => {\n    setPriority(event.target.value);\n  };\n  const handleShowAll = () => {\n    setIsShowAllActive(true);\n  };\n\n  const initialValues = {\n    background: '00',\n    priority: '',\n  };\n  return (\n    <div>\n      <h2 className={css.filterTitle}>Filters</h2>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <div className={css.filterContainer}>\n            <div className={css.filterWrap}>\n              <p className={css.textLeabel}>Label color</p>\n              <button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n                className={css.buttonLeabel}\n              >\n                Show all\n              </button>\n            </div>\n\n            {\n              <ul>\n                {priorityOptions.map(({ value, color, text }) => (\n                  <li key={value} className={css.leabelGroup}>\n                    <Field\n                      as=\"input\"\n                      type=\"radio\"\n                      name=\"priority\"\n                      value={value}\n                      checked={priority === value}\n                      style={{ backgroundColor: color }}\n                      onClick={handleChange}\n                      className={css.label}\n                    />{' '}\n                    <span className={css.labeltext}> {text}</span>\n                  </li>\n                ))}\n              </ul>\n            }\n            <BoardBackgroundPicker\n              backgroundName={backgroundName}\n              onChangeImage={setBackgroundName}\n            />\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HeaderDashboard_container__CSoUF\",\"projectTitle\":\"HeaderDashboard_projectTitle__F-IyU\",\"buttonFilter\":\"HeaderDashboard_buttonFilter__Ns8y8\",\"modalStyle\":\"HeaderDashboard_modalStyle__jVe5R\",\"filterTitle\":\"HeaderDashboard_filterTitle__trtwk\"};","import Filter from 'components/Filter/Filter';\nimport { useState } from 'react';\nimport css from './HeaderDashboard.module.css';\nimport sprite from 'assets/images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\n\nconst HeaderDashboard = () => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => {\n    setIsOpen(isOpen => !isOpen);\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.projectTitle}>Name of project</h2>\n      <button className={css.buttonFilter} type=\" button\" onClick={toggleModal}>\n        <svg\n          className={css.filterIcon}\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <use href={`${sprite}#filter-16`}></use>\n        </svg>\n        <p className={css.filterTitle}>Filters</p>\n      </button>\n      {isOpen && (\n        <Modal\n          style={css.modalStyle}\n          closeModal={toggleModal}\n          children={<Filter />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import AddBtnColumn from 'components/Board/AddBtnColumn/AddBtnColumn';\nimport ColumnsList from '../ColumnsList/ColumnsList';\nimport css from './Screens.page.module.css';\nimport HeaderDashboard from 'components/Board/HeaderDashboard/HeaderDashboard';\n\nconst ScreensPage = () => {\n  return (\n    <>\n      <HeaderDashboard />\n      <div className={css.container}>\n        <ColumnsList />\n        <AddBtnColumn />\n      </div>\n    </>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","title","setTitle","_jsxs","children","_jsx","className","css","name","value","type","placeholder","onChange","_ref","target","required","MainAddButton","text","isOpen","setIsOpen","toggleModal","_Fragment","onClick","href","concat","sprite","Modal","closeModal","AddColumnForm","options","priority","active","map","_ref2","color","Field","as","checked","style","backgroundColor","date","changeDate","CustomInput","forwardRef","ref","DatePicker","locale","en","selected","minDate","Date","dateFormat","today","tomorrow","setDate","getDate","getMonth","getFullYear","getDateFormat","onFocus","event","blur","onKeyDown","preventDefault","customInput","addCardSchema","Yup","shape","max","description","initialValues","action","columnId","taskTitle","taskDescription","taskPriority","taskDeadline","taskId","setPriority","_useState3","_useState4","deadline","setDeadline","dispatch","useDispatch","Formik","validationSchema","onSubmit","values","actions","newCard","column","addTask","resetForm","Form","autoComplete","htmlFor","autoFocus","ErrorMessage","PriorityOptions","Calendar","selectTasks","state","console","log","tasks","tasksList","showMenu","handleProgressChange","toggleMenu","showModal","setShowModal","prevShowModal","formattedDate","year","month","String","padStart","day","formatDate","setShowMenu","_useState5","setProgress","useEffect","handleClickOutside","handleKeyPress","key","document","addEventListener","removeEventListener","borderLeft","Progress","progress","CardForm","cards","useSelector","card","Card","_id","width","height","CardList","click","backgroundName","setBackgroundName","_useState6","isShowAllActive","setIsShowAllActive","handleChange","background","disabled","BoardBackgroundPicker","onChangeImage","Filter","HeaderDashboard","ColumnsList","AddBtnColumn"],"sourceRoot":""}